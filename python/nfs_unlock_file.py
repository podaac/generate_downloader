#  Copyright 2017, by the California Institute of Technology.  ALL RIGHTS
#  RESERVED. United States Government Sponsorship acknowledged. Any commercial
#  use must be negotiated with the Office of Technology Transfer at the
#  California Institute of Technology.
#
# $Id$
# DO NOT EDIT THE LINE ABOVE - IT IS AUTOMATICALLY GENERATED BY CM

# Subroutine to unlock a file using the File::NFSLock module.
#
# This function is meant to work on NFS mounted file system.
# The input i_the_lock is of type Lock from flufl.lock module. 

import os

from time import strftime
from get_local_time import get_local_pdt_time;

def nfs_unlock_file(i_the_lock,
                    i_file_name):

    routine_name = "nfs_unlock_file";
    debug_module = "nfs_unlock_file:";
    debug_mode   = 0;

    if (os.getenv('CRAWLER_SEARCH_DEBUG_FLAG','') == "true"):
        debug_mode   = 1;

    o_unlock_status = 1;

    # Check to make sure the lock is defined.  Returned otherwise.
    if (i_the_lock is None):
        print(now_ascii() + debug_module + "WARN: Lock is not defined.  Nothing to do for file " + i_file_name);
        return(1);

    if (i_the_lock.is_locked):
        if (debug_mode):
            print(now_ascii() + debug_module + "pre:unlock():i_the_lock.is_locked",i_the_lock.is_locked);

        # If the unlock() function fails, an IOError exception is raised so we will attempt to catch it..
        try: 
            i_the_lock.unlock();
            if (debug_mode):
                print(now_ascii() + debug_module + "File " + i_file_name + " is now unlocked.");
        except IOError:
            print(now_ascii() + debug_module + "ERROR: IOError encountered when calling unlock() function on file " + i_file_name);
            o_unlock_status = 0;

        if (debug_mode):
            print(now_ascii() + debug_module + "post:unlock():i_the_lock.is_locked",i_the_lock.is_locked);
    else:
        print(now_ascii() + debug_module + "WARN: The file is not locked.  Nothing to do for file " + i_file_name);

    return(o_unlock_status);

def now_ascii():

    localtime = get_local_pdt_time();
    now_is = strftime("%a %b %d %H:%M:%S %Y",localtime) + " ";
    return(now_is);

import subprocess;
from nfs_lock_file import nfs_lock_file;
from time import strftime
import time;

if __name__ == '__main__':
    i_semaphore_name = "/data/dev/scratch/qchau/test.lck";
    debug_module = "nfs_lock_file:";
    print(debug_module + "touch " + i_semaphore_name);
    subprocess.call(["touch",i_semaphore_name]);
    o_the_lock = nfs_lock_file(i_semaphore_name);
    print(debug_module + "pre_with:o_the_lock", o_the_lock)
    print(debug_module + "sleep 5 seconds");
    time.sleep(5);
    if (o_the_lock.is_locked):
       print(debug_module + "INFO:I got the lock");
       # Now, unlock it.
       nfs_unlock_file(o_the_lock,i_semaphore_name);
    else:
       print(debug_module + "WARN:I got no lock");
    print(debug_module + "post_with:o_the_lock", o_the_lock)
